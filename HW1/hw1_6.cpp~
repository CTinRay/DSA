#include <stdio.h>
#include <algorithm>
#typedef Int int;
using namespace std;

Int GcdByReverserSearch( Int a, Int b){
	for( Int i = min( a, b); i >= 1 ; --i ){
		if( a % i == 0 && b % i == 0 ){
			return i;
		}
	}
}

Int GcdByFilter( Int a, Int b ){
	for( Int i = 2; i <= min( a, b ); ++i ){
		if( a % i == 0 && b % i == 0 ){
			return i * GcdByFilter( a/i , b/i );
		}
	}
	return 1;
}

Int GcdByFilterFaster( Int a , Int b ){
	return GcdByFilterFasterInternal( Int a , Int b , 2);
}

Int GcdByFilterFasterInternal( Int a, Int b, Int s ){
	for( Int i = s; i <= min( a, b) ; ++i ){
		if( a % i == 0 && b % i == 0 ){
			return i * GcdByFilterFasterInternal( a / i , b / i , i );
		}
	}
	return 1;
}

Int GcdByBinary( Int a, Int b ){
	Int m = max( a, b);
	Int n = min( a, b);
	Int ans = 1;
	while( n != 0 && m != 0 ){
		if( n % 2 == 0 && m % 2 == 0 ){
			ans *= 2;
			n /= 2;
			m /= 2;
		}else if( n % 2 == 0 && m % 2 != 0 ){
			n /= 2;
		}else if( n % 2 != 0 && m % 2 == 0 ){
			m /= 2;
		}
		if( n > m ){
			Int tmp = m;
			m = n;
			n = tmp;
		}
		m = m - n;
	}
	return ans;
}

Int GcdByEuclid( Int a, Int b ){
	Int m = max( a, b);
	Int n = min( a, b);
	while( m % n != 0 ){
		Int tmp = n;
		n = m % n;
		m = tmp;
	}
	return n;
}
   
